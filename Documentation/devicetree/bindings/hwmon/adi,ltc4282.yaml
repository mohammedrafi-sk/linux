%YAML 1.2
---
$id: http://devicetree.org/schemas/hwmon/adi,ltc4282.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Analog Devices LTC4282 I2C High Current Hot Swap Controller over I2C

maintainers:
  - Nuno Sa <nuno.sa@analog.com>

description: |
  Analog Devices LTC4282 I2C High Current Hot Swap Controller over I2C.

  https://www.analog.com/media/en/technical-documentation/data-sheets/ltc4282.pdf


properties:
  compatible:
    enum:
      - adi,ltc4282

  reg:
    maxItems: 1

  vdd-supply: true

  adi,rsense-micro-ohms:
    description: Value of the sense resistor.

  adi,vin-mode-microvolt:
    description:
      Selects operating range for the the Undervoltage, Overvoltage and Foldback
      pins. Also for the ADC. Should be set to the nominal input voltage.
    enum: [3300000, 5000000, 12000000, 24000000]
    default: 12000000

  adi,fet-bad-timeout-ms:
    description:
      From the moment a FET bad conditions is present, this property selects the
      wait time/timeout for a FET-bad fault to be signaled. Setting this to 0,
      disables FET bad faults to be reported.
    default: 255
    maximum: 255

  adi,overvoltage-dividers:
    description: |
      Select which dividers to use for VDD Overvoltage detection. Note that
      when the internal dividers are used the threshold is referenced to VDD.
      The percentages in the datasheet are misleading since the actual values
      to look for are in the "Absolute Maximum Ratings" table in the
      "Comparator Inputs" section. In there there's a line for each of the 5%,
      10% and 15% settings with the actual min, typical and max tolerances.
        0 - Use the external dividers.
        1 - Internal dividers 5%
        2 - Internal dividers 10%
        3 - Internal dividers 15%
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 1, 2, 3]
    default: 0

  adi,undervoltage-dividers:
    description: |
      Select which dividers to use for VDD Overvoltage detection. Note that
        when the internal dividers are used the threshold is referenced to VDD.
        The percentages in the datasheet are misleading since the actual values
        to look for are in the "Absolute Maximum Ratings" table in the
        "Comparator Inputs" section. In there there's a line for each of the 5%,
        10% and 15% settings with the actual min, typical and max tolerances.
          0 - Use the external dividers.
          1 - Internal dividers 5%
          2 - Internal dividers 10%
          3 - Internal dividers 15%
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 1, 2, 3]
    default: 0

  adi,on-delay:
    description:
      If set, a 50ms debounce is applied to the ON pin commanding the part to
      turn on. If not, the part turn on immediately.
    type: boolean

  adi,on-active-low:
    description: Set the ON pin as active low.
    type: boolean

  adi,current-limit-microvolt:
    description:
      The current limit sense voltage of the LTC4282 is adjustable between
      12.5mV and 34.4mV in 3.1mV steps. This effectively limits the current
      on the load.
    enum: [12500, 15625, 18750, 21875, 25000, 28125, 31250, 34375]
    default: 25000

  adi,overcurrent-retry:
    description:
      If set, enables the part to auto-retry 256 timer cycles after an
      Overcurrent fault.
    type: boolean

  adi,alert-as-gp:
    description: Use the ALERT pin as a GPIO.
    type: boolean

  adi,gpio0-mode:
    description: |
      Defines the function of the Pin.
          0 - GPIO Mode.
          1 - Power Bad. Goes into high-z if the output power is no longer
              good.
          2 - Power Good. Pulls low to indicate that the output power is no
              longer good.
    $ref: /schemas/types.yaml#/definitions/uint32
    maximum: 2

  adi,gpio1-mode:
    description: |
      Defines the function of the Pin.
          0 - GPIO Mode.
          1 - Acts as an input pin and it is feeded into the ADC.
          2 - Pull Low when the MOSFET is dissipating power (stress).
    $ref: /schemas/types.yaml#/definitions/uint32
    maximum: 2

  adi,gpio2-mode:
    description: |
      Defines the function of the Pin.
          0 - GPIO Mode.
          1 - Acts as an input pin and it is feeded into the ADC.
    $ref: /schemas/types.yaml#/definitions/uint32
    maximum: 1

  gpio-controller:
    description:
      This property applies if some of the pins are used as GPIOs.

  '#gpio-cells':
    const: 2

required:
  - compatible
  - reg
  - adi,rsense-micro-ohms

dependencies:
  adi,alert-as-gp: [gpio-controller, '#gpio-cells']

allOf:
  - if:
      required:
        - adi,gpio0-mode
    then:
      allOf:
        - if:
            properties:
              adi,gpio0-mode:
                const: 0
          then:
            dependencies:
              adi,gpio0-mode: [gpio-controller, '#gpio-cells']
  - if:
      required:
        - adi,gpio1-mode
    then:
      allOf:
        - if:
            properties:
              adi,gpio1-mode:
                const: 0
          then:
            dependencies:
              adi,gpio1-mode: [gpio-controller, '#gpio-cells']
  - if:
      required:
        - adi,gpio2-mode
    then:
      allOf:
        - if:
            properties:
              adi,gpio2-mode:
                const: 0
          then:
            dependencies:
              adi,gpio2-mode: [gpio-controller, '#gpio-cells']

additionalProperties: false

examples:
  - |
    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        ltc4282@50 {
            compatible = "adi,ltc4282";
            reg = <0x50>;
            adi,rsense-micro-ohms = <500>;

            gpio-controller;
            #gpio-cells = <2>;

            adi,alert-as-gp;
            adi,gpio0-mode = <0>;
            adi,gpio1-mode = <0>;
        };
    };
...
